version: "3.8"

services:
  mongo_db:
    container_name: mongo_db
    image: mongo:4.4.2-bionic
    restart: always
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    ports:
      - 27017:27017

  redis:
    container_name: redis
    image: redis:6.2-rc2-alpine
    init: true
    restart: always
    volumes:
      - redis_data:/data
    env_file:
      - .env
    command: redis-server --appendonly yes

  # data_receiver:
  #   container_name: data_receiver
  #   image: gr1902/data_manager
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   command: python start_receiver.py --config config.yaml
  #   volumes:
  #     - ./logs/:/home/user/app/logs
  #   restart: on-failure
  #   depends_on:
  #     - mongo_db

  # data_checker:
  #   container_name: data_checker
  #   image: gr1902/data_manager
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   command: python start_checker.py --config config.yaml
  #   volumes:
  #     - ./logs/:/home/user/app/logs
  #   restart: on-failure
  #   depends_on:
  #     - mongo_db

  data_writer:
    container_name: data_writers
    image: gr1902/data_manager
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: celery -A workers.data_writer worker -l INFO
    volumes:
      - ./logs/:/home/user/app/logs
    # restart: on-failure
    depends_on:
      - mongo_db
      - redis

volumes:
  mongo_data:
  redis_data: